<!doctype html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    
    <style>
        
        .bd-placeholder-img {
            font-size: 1.125rem;
            text-anchor: middle;
            -webkit-user-select: none;
            -moz-user-select: none;
            user-select: none;
        }

        @media (min-width: 768px) {
            .bd-placeholder-img-lg {
                font-size: 3.5rem;
            }
        }
        
    </style>

    <link rel='stylesheet' href='stylesheets/home.css' />
    <title>File Operation</title>
</head>

<body>
    <!-- Narbar-->
    <%- include('../layouts/navbar') %>
    <!-- end of Narbar-->
    <!-- LEFT -->
    <%- include('../layouts/course-list') %>
    <!-- END OF LEFT-->

    <!-- MIDDLE 1 -->
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <style>
        .breadcrumb {
            margin-bottom: 0;
            background-color: white;
            }
        .blockquote-footer {
            color:black;
        }
    </style>
    <a id="Token"></a>
    <!-- MIDDLE 1 -->
    <div class="content">
        <div id = "content" class="container">
    <!--   C Language -->
            <div class="accordion" id="accordionParentSyntax">
                <!--   Token -->
                <div id="collapseIntroduce" class="accordion-collapse collapse show" data-bs-parent="#accordionParentSyntax">
                    <h1 >Operations on the File</h1>
                    <!--   ## -->
                    <div class="box bg-light  mb-5 shadow" >
                        <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-offset="0" class="scrollspy-example" tabindex="0">
                            <h1 id = ''> Operations on the File </h1>
                            <br>ในการเขียนโปรแกรม เราอาจต้องการข้อมูลอินพุตเฉพาะบางรายการเพื่อสร้างหลายครั้ง บางครั้งการแสดงข้อมูลบนคอนโซลอย่างเดียวไม่เพียงพอ ข้อมูลที่จะแสดงอาจมีขนาดใหญ่มาก และสามารถแสดงข้อมูลได้จำนวนจำกัดบนคอนโซล และเนื่องจากหน่วยความจำมีความผันผวน จึงเป็นไปไม่ได้ที่จะกู้คืนข้อมูลที่สร้างโดยทางโปรแกรมครั้งแล้วครั้งเล่า อย่างไรก็ตาม หากจำเป็นต้องทำเช่นนั้น เราอาจจัดเก็บไฟล์ดังกล่าวไว้ในระบบไฟล์ในเครื่องซึ่งมีความผันผวนและสามารถเข้าถึงได้ทุกครั้ง มาถึงความต้องการการจัดการไฟล์ใน C.<br>
                            <br>การจัดการไฟล์ในภาษา C ช่วยให้เราสร้าง อัปเดต อ่าน และลบไฟล์ที่จัดเก็บไว้ในระบบไฟล์ในเครื่องผ่านโปรแกรม C ของเราได้ การดำเนินการต่อไปนี้สามารถทำได้บนไฟล์<br>
                            <br>- การสร้างไฟล์ใหม่<br>
                            <br>- การเปิดไฟล์ที่มีอยู่<br>
                            <br>- อ่านจากไฟล์<br>
                            <br>- กำลังเขียนไปยังไฟล์<br>
                            <br>- การลบไฟล์<br>
                            <h5><br>Functions for file handling<br></h5>
                            <br>ในไลบรารี C มีฟังก์ชันมากมายในการเปิด อ่าน เขียน ค้นหา และปิดไฟล์ รายการฟังก์ชั่นไฟล์ได้รับด้านล่าง<br>
                            <img src="https://drive.google.com/uc?id=1xDolowQzrrAlcpVVpZyau7I1PAjGoqC6">
                            <h5><br>Opening File: fopen()<br></h5>
                            <br>เราต้องเปิดไฟล์ก่อนจึงจะสามารถอ่าน เขียน หรืออัปเดตได้ ฟังก์ชัน fopen() ใช้สำหรับเปิดไฟล์ ไวยากรณ์ของ fopen() ได้รับด้านล่าง<br>
                            <img src="https://drive.google.com/uc?id=1xdJ9piAFy4NHt536Sg-HgSJIl28Uy0yo">
                            <br>ฟังก์ชัน fopen() ยอมรับสองพารามิเตอร์:ชื่อไฟล์ (สตริง) หากไฟล์ถูกจัดเก็บไว้ที่ตำแหน่งใดตำแหน่งหนึ่ง เราต้องระบุพาธที่จัดเก็บไฟล์นั้น ตัวอย่างเช่น ชื่อไฟล์อาจเป็นเช่น"c://some_folder/some_file.ext"โหมดที่จะเปิดไฟล์ มันเป็นสตริง<br>
                            <br>เราสามารถใช้โหมดใดโหมดหนึ่งต่อไปนี้ในฟังก์ชัน fopen()<br>
                            <img src="https://drive.google.com/uc?id=1sKfptpsgdzeI1ywLmF1E3Io4KusJwHx-">
                            <br>ฟังก์ชัน fopen ทำงานในลักษณะต่อไปนี้<br>
                            <br>- ประการแรก มันค้นหาไฟล์ที่จะเปิด<br>
                            <br>- จากนั้นจะโหลดไฟล์จากดิสก์และวางลงในบัฟเฟอร์ บัฟเฟอร์ถูกใช้ เพื่อให้มีประสิทธิภาพสำหรับการดำเนินการอ่าน<br>
                            <br>- มันตั้งค่าตัวชี้อักขระซึ่งชี้ไปที่อักขระตัวแรกของไฟล์พิจารณาตัวอย่างต่อไปนี้ซึ่งเปิดไฟล์ในโหมดเขียน<br>
                            <br>พิจารณาตัวอย่างต่อไปนี้ซึ่งเปิดไฟล์ในโหมดเขียน<br>
                            <img src="https://drive.google.com/uc?id=1j5y_Y7ao5frlH3AGXImkNEwoYrz87SkV">
                            <h5><br>Closing File: fclose()<br></h5>
                            <br>ฟังก์ชัน fclose() ใช้สำหรับปิดไฟล์ ต้องปิดไฟล์หลังจากดำเนินการทั้งหมดกับไฟล์แล้ว ไวยากรณ์ของฟังก์ชัน fclose() มีดังต่อไปนี้<br>
                            <img src="https://drive.google.com/uc?id=1Oms4nW83pmDYPKugG5kMBgUdp_fCncJa">
                            <h5><br>C fprintf() and fscanf()<br></h5>
                            <h6><br>Writing File : fprintf() function<br></h6>
                            <br>ฟังก์ชัน fprintf() ใช้สำหรับเขียนชุดอักขระลงในไฟล์ จะส่งเอาต์พุตที่จัดรูปแบบไปยังสตรีม<br>
                            <br>Syntax:<br>
                            <img src="https://drive.google.com/uc?id=1LJCBp8jR2FsX68eSairAgsjVUiJfddmX">
                            <br>Example:<br>
                            <img src="https://drive.google.com/uc?id=1jewq47Re-tCN_q4yabBlcoGWRt0OkPdd">
                            <h6><br>Reading File : fscanf() function<br></h6>
                            <br>ฟังก์ชัน fscanf() ใช้สำหรับอ่านชุดอักขระจากไฟล์ มันอ่านคำจากไฟล์และส่งคืน EOF ที่ส่วนท้ายของไฟล์<br>
                            <br>Syntax:<br>
                            <img src="https://drive.google.com/uc?id=1rV57e6FAQMFqF7b7OUN23ttK-Uk2W0Vv">
                            <br>Example:<br>
                            <img src="https://drive.google.com/uc?id=1YO_Ac7Z7xuDzUtGTssZO8iODAKsewcip">
                            <h5><br>C fputc() and fgetc()<br></h5>
                            <h6><br>Writing File : fputc() function<br></h6>
                            <br>ฟังก์ชัน fputc() ใช้สำหรับเขียนอักขระตัวเดียวลงในไฟล์ มันส่งออกอักขระไปยังสตรีม<br>
                            <br>Syntax:<br>
                            <img src="https://drive.google.com/uc?id=17SRkUAuTnywB-yYJ0xRu56TjouDChMaR">
                            <br>Example:<br>
                            <img src="https://drive.google.com/uc?id=1bZQQrAxHyeY9yz8VaBkanZcyckVDihRv">
                            <h6><br>Reading File : fgetc() function<br></h6>
                            <br>ฟังก์ชัน fgetc() ส่งกลับอักขระตัวเดียวจากไฟล์ ได้รับตัวละครจากสตรีม ส่งคืน EOF ที่ส่วนท้ายของไฟล์<br>
                            <br>Syntax:<br>
                            <img src="https://drive.google.com/uc?id=1S4YLzDPT_F3EOmO29wKXAhY-XXUQ29OO">
                            <br>Example:<br>
                            <img src="https://drive.google.com/uc?id=1Jzbfr-p5M2etSf2i8-5ECet1xfvpRoLK">
                            <h5><br>C fputs() and fgets()<br></h5>
                            <h6><br>Writing File : fputs() function<br></h6>
                            <br>ฟังก์ชัน fputs() เขียนบรรทัดอักขระลงในไฟล์ มันส่งสตริงไปยังสตรีม<br>
                            <br>Syntax:<br>
                            <img src="https://drive.google.com/uc?id=1J2PxN2XczHOzJnhxo6AwR1XOxxKPbN40">
                            <br>Example:<br>
                            <img src="https://drive.google.com/uc?id=11bXUDjDTkekS9iqqRjp3qeup2C8dZuM1">
                            <h6><br>Reading File : fgets() function<br></h6>
                            <br>ฟังก์ชัน fgets() อ่านบรรทัดของอักขระจากไฟล์ ได้รับสตริงจากสตรีม<br>
                            <br>Syntax:<br>
                            <img src="https://drive.google.com/uc?id=1qDWDi-dFwfFCO7Va8Pju-2sRnZjII53P">
                            <br>Example:<br>
                            <img src="https://drive.google.com/uc?id=1tm4F4LQN8HX5y7bBd8sVKSMbcq-E-H_n">
                            <h5><br>C fseek() function<br></h5>
                            <br>Syntax:<br>
                            <img src="https://drive.google.com/uc?id=1TkBkUiy3GktXCZnuFfsMYIqPXnnifm4s">
                            <br>มี 3 ค่าคงที่ที่ใช้ในฟังก์ชัน fseek() สำหรับที่มา: SEEK_SET, SEEK_CUR และ SEEK_END<br>
                            <br>Example:<br>
                            <img src="https://drive.google.com/uc?id=1LNUX8qQy54jTNKRxxZoj3uCV0_Mbjcyn">
                            <br><br>
                            <iframe width="480" height="320" src="https://www.youtube.com/embed/_ChkXLOabZw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                            <BR id="Semicolons">
                        </div>
                    </div>
            <br ></div>
        
        <button onclick="window.location.href='/course-syntax-quiz'" type="button" class="btn btn-outline-secondary btn-lg btn-block bg-light shadow" style="color:black" ><h2><u>แบบทดสอบย่อย</h2></u></button>
        

        

        <br></div>
        </div>
    </div>


    <!-- END Of MIDDLE  -->
    </body>
</html>


